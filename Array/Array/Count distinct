/* C/C++ program to count number of times S appears
   as a subsequence in T */
#include <bits/stdc++.h>
using namespace std;
 
int f(int i, int j, string s, string t,
      vector<vector<int> >& dp)
{
    if (t.size() - j > s.size() - i)
        return 0;
   
    if (j == t.size()) {
        return 1;
    }
 
    if (i == s.size()) {
        return 0;
    }
 
    if (dp[i][j] != -1) {
        return dp[i][j];
    }
 
    if (s[i] == t[j]) {
        return dp[i][j] = f(i + 1, j + 1, s, t, dp)
                          + f(i + 1, j, s, t, dp);
    }
 
    return dp[i][j] = f(i + 1, j, s, t, dp);
}
 
int findSubsequenceCount(string s, string t)
{
    vector<vector<int> > dp(s.size(),
                            vector<int>(t.size(), -1));
    return f(0, 0, s, t, dp);
}
 
// Driver code to check above method
int main()
{
    string T = "ge";
    string S = "geeksforgeeks";
    cout << findSubsequenceCount(S, T) << endl;
    return 0;
}
