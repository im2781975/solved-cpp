#include <bits/stdc++.h>
 
using namespace std;
 
// Comparator function to sort pairs based on the second
// element
bool comp(const pair<int, int>& v1,
          const pair<int, int>& v2)
{
    // Sort in ascending order of index values
    return v1.second < v2.second;
}
 
// Function to reorder elements of arr[] according to
// index[]
void reorder(int arr[], int index[], int n)
{
    // Create a vector of pairs, where each pair stores the
    // original element (arr[i]) and its corresponding index
    // (index[i])
    vector<pair<int, int> > a(n);
 
    for (int i = 0; i < n; i++) {
        a[i].first = arr[i];
        a[i].second = index[i];
    }
 
    // Sort the vector of pairs based on the second element
    // (index) using the comp() comparator function
    sort(a.begin(), a.end(), comp);
 
    // Copy the sorted elements back to the original arr[]
    for (int i = 0; i < n; i++) {
        arr[i] = a[i].first;
    }
}
 
// Driver program
int main()
{
    int arr[] = { 50, 40, 70, 60, 90 };
    int index[] = { 3, 0, 4, 1, 2 };
    int n = sizeof(arr) / sizeof(arr[0]);
 
    // Call the reorder function to rearrange elements in
    // arr[] based on index[]
    reorder(arr, index, n);
 
    cout << "Reordered array is: \n";
    for (int i = 0; i < n; i++)
        cout << arr[i] << " ";
 
    return 0;
}
