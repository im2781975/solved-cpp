//how many ways we can reach from top_left corner to bottom_right corner.
#include<bits/stdc++.h>
using namespace std;
int unique_path(int n,int m)
{
    if(n==0 && m==0)
    {
        return 1;
    }
    if(dp[n][m]!=-1)
    {
        return dp[n][m];
    }
    int ans=0;
    if(n>0)
    {
        ans+=unique_path(n-1,m);
    }
    if(m>0)
    {
        ans+=unique_path(n,m-1);
    }
    dp[n][m]=ans;
    return ans;
}

const int N=102;
int dp[N][N];

int main()
{
    int row,col;
    cin>>row>>col;
    for(int i=0; i<row; i++)
    {
        for(int j=0; j<col; j++)
        {
            dp[i][j]=0;
        }
    }
    cout<<unique_path(row-1,col-1);
}

