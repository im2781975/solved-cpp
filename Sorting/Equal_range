// std::equal_range 
#include <iostream> 
#include <vector> 
#include <algorithm> 
using namespace std; 
int main() 
{ 
    vector<int> v = { 1, 2, 3, 4, 5, 5, 6, 7 }; 
 
    // return value of std::equal_range 
    pair<vector<int>::iterator, 
    vector<int>::iterator> ip; 
  
    // Using std::equal_range and comparing the elements 
    ip = equal_range(v.begin(), v.end(), 5); 
  
    cout << "lower_bound should be equal to "
         << (ip.first - v.begin()) << " and upper_bound "
         << "should be equal to " << (ip.second - v.begin()); 
  
    vector<int>::iterator i1, i2; 
  
    // Using std::lower_bound 
    i1 = lower_bound(v.begin(), v.end(), 5); 
    cout << "\nlower_bound is = " << (i1 - v.begin()); 
  
    // Using std::upper_bound 
    i2 = upper_bound(v.begin(), v.end(), 5); 
    cout << "\nupper_bound is = " << (i2 - v.begin()); 
  
    return 0; 
} 
