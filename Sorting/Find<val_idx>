// use of std::equal_range 
#include <iostream> 
#include <algorithm> 
#include <string> 
#include <vector> 
#include <functional> 
using namespace std; 
  
// Defining the BinaryFunction 
bool comp(int a, int b) 
{ 
    return (a > b); 
} 
int main() 
{ 
    vector<int> v = { 10, 10, 30, 30, 30, 100, 10, 300, 300, 70, 70, 80 }; 
  
    // return value of std::equal_range 
    pair<vector<int>::iterator, 
    vector<int>::iterator> ip; 
  
    sort(v.begin(), v.end(), greater<int>());, 
  
    // Using std::equal_range and comparing the elements 
    // with 10 
    ip = std::equal_range(v.begin(), v.begin() + 12, 10, comp); 
  
    // Displaying the subrange bounds 
    cout << "10 is present in the sorted vector from index "
         << (ip.first - v.begin()) << " till "
         << (ip.second - v.begin()); 
  
    return 0; 
} 
