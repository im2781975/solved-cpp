Take the Singly linked-list class from Github. 
Link: https://github.com/phitronio/Data-Structure-Batch2/blob/main/Week%204/Module%2013/1.cpp 
Add the following functions to the class.
int getValue(index) -> This function will return the value present in the input index. If the index is greater or equal to the size of the linked-list return -1.
Sample Input: [3, 2, 6, 4, 5], index: 0
Sample Output: 3

void deleteZero() -> This function will delete all the nodes that have data=0.
Sample Input: [0, 2, 0, 0, 5]
Sample Output: Singly linked list containing the elements [2, 5]

int getOddIndexSum() -> This function will return the sum of all odd indexed nodes.
Sample Input: [3, 2, 6, 4, 5]
Sample Output: 6 
Explanation: Odd indexed nodes are 2 and 4. 2+4 = 6.

bool hasDuplicate() -> This function will return true if the linked list contains two nodes that contain the same data.
Sample Input: [3, 2, 6, 3, 5]
Sample Output: True


Take the Doubly linked-list class from Github. 
Link: https://github.com/phitronio/Data-Structure-Batch2/blob/main/Week%204/Module%2014/1.cpp
Add the following functions to the class.
void deleteMid() -> This function will delete the middle element from the linked list. Middle element = floor(size / 2).
Sample Input: [1, 2, 3, 4, 5]
Sample Output: Doubly linked list containing the elements [1,2,4,5]
Sample Input: [1, 2, 3, 4]
Sample Output: Doubly linked list containing the elements [1,2,4]

int getMax() -> This function will return the maximum value present in the linked list.
Sample Input: [3, 2, 6, 4, 5]
Sample Output: 6

void deleteMax() -> This function will delete the maximum value present in the linked list. If there are multiple nodes with the maximum value then it will delete all of them.
Sample Input: [3, 2, 6, 4, 5, 6]
Sample Output: Doubly linked list containing the elements [3,2,4,5]


